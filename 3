def func4(arg23, arg24):
    var29 = func5(arg23, arg24)
    var30 = -175 & (1469689491 & arg23)
    var31 = (var30 + (var30 | 1342571015)) | arg23
    var32 = 435 & (270551737 | (arg24 | var31))
    var33 = var30 ^ (var29 - -345 | -1595783777)
    if var30 < var33:
        var34 = (var32 | var30) - arg23
    else:
        var34 = var32 - (-868851321 | var29)
    if var31 < arg23:
        var35 = -517 ^ 0
    else:
        var35 = (var31 | arg24) & var33 & var29
    var36 = (var33 & (var29 + 365824318)) + var30
    var37 = var32 - (var31 | -75446271 ^ var32)
    var38 = var31 + -1672760253
    var39 = var38 | (var38 & var29)
    var40 = -688 + (arg24 - var38)
    var41 = (var29 ^ arg23 + var36) ^ var31
    var42 = (arg23 & var40) + arg23
    var43 = (-1796133382 | var36) + var32 & var31
    var44 = ((var40 | var33) ^ 75479908) - var30
    var45 = -289 & (var31 | var32 + var41)
    var46 = var29 ^ (var43 + var45) + var31
    if var46 < arg24:
        var47 = var39 ^ (var36 & var46)
    else:
        var47 = var33 & var32 + var44 + var43
    var48 = var33 ^ var33 + var37 + var31
    var49 = -173 + var41 + var31 | arg23
    if var36 < var41:
        var50 = var49 + var46 & var45 - var44
    else:
        var50 = var41 | var41
    var51 = var46 - var42
    if var38 < var37:
        var52 = var51 + (var37 | arg23) - var30
    else:
        var52 = var42 & var45 & (var42 & var33)
    var53 = var46 + arg24 | var48
    var54 = var33 ^ var37 + 630
    result = (arg24 ^ 230) + (var30 + ((((((-614532460 + var43) ^ var51 + var51) + var36) + var42) & var45 ^ var33) | var30))
    return result
def func5(arg25, arg26):
    var27 = 0
    for var28 in xrange(48):
        var27 += var27 | var28 & arg25
    return var27
def func3(arg9, arg10):
    var11 = (924091319 + arg10 & -29) | 478
    var12 = var11 - (var11 & arg9)
    var13 = arg9 & arg10
    var14 = (1084920853 & (var12 | arg10)) ^ 901
    var15 = arg10 + ((var13 - var14) | var11)
    var16 = var14 | var11
    var17 = var14 | (var12 ^ var11) + 1224981837
    if var16 < var16:
        var18 = (var17 + arg10) & -18204379
    else:
        var18 = 528 + 674
    var19 = var17 + var14 | var15 | -366
    if arg9 < var16:
        var20 = (-561 | var16) ^ (var16 ^ var13)
    else:
        var20 = var16 & var19
    var21 = -1106801700 ^ var13
    var22 = var11 + arg9 & 543
    result = var19 ^ var15
    return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    var8 = arg2 & (arg2 - -2054045014 - var7) - arg2
    result = var8 | ((((-1341773101 + ((arg1 | -2012416819) | -555)) & -320296427 ^ -990 | arg1) - var7) ^ var8 - -162 | arg2)
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg3 | -8 ^ arg4 for i in [(arg3 | arg3) + var5 for i in [(var5 & (var5 ^ var5 + i ^ var5)) - -6 - var5 - var5 & i | 5 - arg3 for i in range(7)]]]:
        var5 += (arg3 | -3) - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 3'
    print 'arg_number: 9'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 4'
    print 'func_number: 4'
    print 'arg_number: 23'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 6'
    print 'arg_number: 55'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,
